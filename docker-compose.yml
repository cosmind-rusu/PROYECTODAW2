version: '3.8'

services:
  backend:
    build:
      context: ./back
      dockerfile: Dockerfile
    ports:
      - "5000:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - FRONT_URL=http://localhost:8080
    depends_on:
      db:
        condition: service_healthy

  frontend:
    build:
      context: ./front
      dockerfile: Dockerfile  # Dockerfile del frontend que termina en Caddy
    ports:
      - "8080:80"  # punto de entrada Ãºnico para todo (frontend + proxy /api)
    depends_on:
      - backend

  db:
    image: postgres:15
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=veterinarydb
    ports:
      - "5432:5432"
    volumes:
      - db-data:/var/lib/postgresql/data

volumes:
  db-data:
